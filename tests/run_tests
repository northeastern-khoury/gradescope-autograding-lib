#!/usr/bin/env python3
''' run_tests
    PREREQ: Requires gradescope lib be on $PYTHONPATH
'''

import importlib
import os
import sys

from pathlib import Path


def main():
  ''' main time '''
  gradescope = None
  failures = 0

  sys.path.insert(1, str(Path(os.path.dirname(__file__)).resolve().parent / "src"))

  for testdir in sorted(filter(os.path.isdir, os.listdir())):
    # Point gradescope lib to the current test case
    os.environ['AUTOGRADER_ROOT'] = os.path.abspath(testdir)
    os.environ['PATH_RESULTS']    = str(Path(os.getcwd()) / 'results.json')

    # Reload dependencies
    importlib.invalidate_caches()
    if gradescope is None:
      gradescope = importlib.import_module("gradescope")
    else:
      gradescope = importlib.reload(gradescope)
      gradescope.paths.reload()

    # Load Testcase
    tester = importlib.import_module(testdir).tester

    # Functional section
    tester.exec().save()
    if not os.path.exists(os.environ['PATH_RESULTS']):
      failures += 1
      print(f"[FAIL] {testdir}")
      print( "    Failed to produce output json")
    elif tester.failed:
      failures += 1
      print(f"[FAIL] {testdir}")
      print(open(os.environ['PATH_RESULTS']).read())
    else:
      print(f"[OKAY] {testdir}")
      os.remove(os.environ['PATH_RESULTS'])

  if failures != 0:
    sys.exit(1)

if __name__ == '__main__':
  main()
